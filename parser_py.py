# -*- coding: utf-8 -*-
"""parser.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A8oo28FrYFT7lEBQV2PkOJjp3KT8VWoW
"""

import re
import nltk
from nltk.tokenize import word_tokenize, sent_tokenize
from nltk import pos_tag

nltk.download('punkt_tab')
nltk.download('averaged_perceptron_tagger_eng')

def extract_email(text):
    match = re.search(r'[\w\.-]+@[\w\.-]+', text)
    return match.group() if match else None

def extract_phone(text):
    match = re.search(r'\b\d{10}\b|\(?\d{3}\)?[-.\s]?\d{3}[-.\s]?\d{4}', text)
    return match.group() if match else None

def extract_education(text):
    edu_keywords = ['bachelor', 'master', 'b.tech', 'm.tech', 'b.sc', 'm.sc', 'phd', 'degree','b.e']
    lines = text.lower().split('\n')
    edu_lines = [line for line in lines if any(keyword in line for keyword in edu_keywords)]
    return edu_lines

def extract_name(text):
    sentences = sent_tokenize(text)
    for sent in sentences[:3]:
        tokens = word_tokenize(sent)
        tagged = pos_tag(tokens)
        name = [word for word, tag in tagged if tag == 'NNP']
        if len(name) >= 2:
            return ' '.join(name[:2])
    return None

SKILL_KEYWORDS = [
    'python', 'java', 'c++', 'c#', 'html', 'css', 'javascript', 'react',
    'node', 'angular', 'sql', 'mysql', 'mongodb', 'git', 'docker',
    'tensorflow', 'keras', 'machine learning', 'data analysis', 'nlp', 'pandas', 'numpy'
]


def extract_skills(text):
    text_lower = text.lower()
    found_skills = []
    for skill in SKILL_KEYWORDS:
        if skill.lower() in text_lower:
            found_skills.append(skill)
    return list(set(found_skills))  

def parse_resume(text):
    return {
        "Name": extract_name(text),
        "Email": extract_email(text),
        "Phone": extract_phone(text),
        "Education": extract_education(text),
        "Skills": extract_skills(text)
    }

